# Инициализация сборки. Базовым образом выступает последний релиз ubuntu
# Это место можно улучшить. В продакшн среде не стоит использовать полновесные
# образы типа ubuntu. Лушче использовать небольшие легковесные образы типа Alpine Linux
# так же не стоит использовать тег latest - при последующей сборке может поменяться версия контейнера
# по этому правилом хорошего тона было бы "припинивание" конкретной версии
FROM ubuntu:latest
# обновляем список репозиториев
RUN apt-get update -y
# установка интерпретатора языка pyton и пакетного менеджера pip
RUN apt-get install -y python3 python3-pip python3-dev
# При помощи инструкции COPY Docker копирует наш проект в образ в папку /app
COPY ./app /app
# перенос рабочей дирректории в папку /app. в дальнейшем все инструкции будут выполняться в контектсе этой папки
WORKDIR /app
# Установка модулей указаных как зависимости для нашего приложения которые описаны в файле requirements.txt
RUN pip3 install -r requirements.txt
# инструкция ENTRYPOINT указывает команду запуска приложения внутри контейнера.
# в нашем случае это интерпретатор pyton3
ENTRYPOINT ["python3"]
# команда CMD при использовании инструкции ENTRYPOINT передает програме запуска аргумент - 
# что нужно запустить - в данном случае аргументом является основной файл нашего приложения main.py
CMD ["main.py"]